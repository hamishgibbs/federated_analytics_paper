.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/gravity/check/gravity_basic_2019_01_01_check.csv",
"output/gravity/check/gravity_power_2019_01_01_check.csv",
"output/gravity/pij/gravity_basic_2019_01_01_pij.csv",
"output/gravity/pij/gravity_power_2019_01_01_pij.csv",
"output/sensitivity/collective_model_sensitivity/collective_model_metrics_2019_01_01.png"
)
N_COLLECTIVE_MODELS <- 2
} else {
.args <- commandArgs(trailingOnly = T)
N_COLLECTIVE_MODELS <- 8
}
.outputs <- tail(.args, 1)
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
metrics_fn <- .args[2:(N_COLLECTIVE_MODELS+1)]
pij_fn <- .args[(N_COLLECTIVE_MODELS+2):(N_COLLECTIVE_MODELS+N_COLLECTIVE_MODELS+1)]
read_model <- function(fn, stub, colClasses){
model_name <- gsub(stub, "", basename(fn))
df <- fread(fn, colClasses=colClasses)
df$model <- model_name
df
}
metrics <- do.call(rbind,
lapply(metrics_fn, read_model, stub="_2019_01_01_check.csv",
colClasses=c()))
pij <- do.call(rbind,
lapply(pij_fn, read_model, stub="_2019_01_01_pij.csv",
colClasses=c("geoid_o"="character", "geoid_d"="character")))
empirical[, obs := pop_flows / sum(pop_flows)]
empirical
pij[empirical, on=c("geoid_o", "geoid_d"), obs := obs]
pij
pij <- pij[order(obs)]
pij
pij[, id := rev(.I)]
pij
melt(pij, id.vars = c("geoid_o", "geoid_d", "model", "id"))
pij <- melt(pij, id.vars = c("geoid_o", "geoid_d", "model", "id"))
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("black", "red")) +
facet_wrap(~model) +
labs(title=basename(.outputs[3]),
y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model) +
labs(title=basename(.outputs[3]),
y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
p
metrics
subset(metrics, metric=="RMSE")[order(value)]
subset(metrics, metric=="RMSE")[order(-value)]
model_order <- subset(metrics, metric=="RMSE")[order(-value)]
model_order
model_order <- subset(metrics, metric=="RMSE")[order(-value)]$model
model_order
model_labels <- gsub("_", " ", model_order)
model_labels
model_labels <- stringr::str_to_title(gsub("_", " ", model_order))
model_labels
model_labels
pij[, model := factor(model, levels=model_order, labels=model_labels)]
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model) +
labs(y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
p
suppressPackageStartupMessages({
library(data.table)
library(ggplot2)
})
if (interactive()) {
.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/gravity/check/gravity_basic_2019_01_01_check.csv",
"output/gravity/check/gravity_power_2019_01_01_check.csv",
"output/gravity/pij/gravity_basic_2019_01_01_pij.csv",
"output/gravity/pij/gravity_power_2019_01_01_pij.csv",
"output/sensitivity/collective_model_sensitivity/collective_model_metrics_2019_01_01.png"
)
N_COLLECTIVE_MODELS <- 2
} else {
.args <- commandArgs(trailingOnly = T)
N_COLLECTIVE_MODELS <- 8
}
.outputs <- tail(.args, 1)
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
metrics_fn <- .args[2:(N_COLLECTIVE_MODELS+1)]
pij_fn <- .args[(N_COLLECTIVE_MODELS+2):(N_COLLECTIVE_MODELS+N_COLLECTIVE_MODELS+1)]
read_model <- function(fn, stub, colClasses){
model_name <- gsub(stub, "", basename(fn))
df <- fread(fn, colClasses=colClasses)
df$model <- model_name
df
}
metrics <- do.call(rbind,
lapply(metrics_fn, read_model, stub="_2019_01_01_check.csv",
colClasses=c()))
pij <- do.call(rbind,
lapply(pij_fn, read_model, stub="_2019_01_01_pij.csv",
colClasses=c("geoid_o"="character", "geoid_d"="character")))
empirical[, obs := pop_flows / sum(pop_flows)]
pij[empirical, on=c("geoid_o", "geoid_d"), obs := obs]
pij <- pij[order(obs)]
pij[, id := rev(.I)]
pij <- melt(pij, id.vars = c("geoid_o", "geoid_d", "model", "id"))
model_order <- subset(metrics, metric=="RMSE")[order(value)]$model
model_labels <- stringr::str_to_title(gsub("_", " ", model_order))
pij[, model := factor(model, levels=model_order, labels=model_labels)]
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model) +
labs(y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none")
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = expression(P[i,j]),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none")
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = expression(P['i,j']),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none")
p
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = expression(P['i,j']),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
p
metrics <- metrics[order(metric, model)]
p <- ggplot(metrics) +
geom_path(aes(x = model, y = value, group=metric), size=0.2) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold"))
p
metrics
metrics[, model := factor(model, levels=model_order, labels=model_labels)]
p <- ggplot(metrics) +
geom_path(aes(x = model, y = value, group=metric), size=0.2) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold"))
p
metrics[, model := factor(model, levels=rev(model_order), labels=rev(model_labels))]
p <- ggplot(metrics) +
geom_path(aes(x = model, y = value, group=metric), size=0.2) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold"))
p
metrics <- metrics[order(metric, model)]
metrics
suppressPackageStartupMessages({
library(data.table)
library(ggplot2)
})
if (interactive()) {
.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/gravity/check/gravity_basic_2019_01_01_check.csv",
"output/gravity/check/gravity_power_2019_01_01_check.csv",
"output/gravity/pij/gravity_basic_2019_01_01_pij.csv",
"output/gravity/pij/gravity_power_2019_01_01_pij.csv",
"output/sensitivity/collective_model_sensitivity/collective_model_metrics_2019_01_01.png"
)
N_COLLECTIVE_MODELS <- 2
} else {
.args <- commandArgs(trailingOnly = T)
N_COLLECTIVE_MODELS <- 8
}
.outputs <- tail(.args, 2)
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
metrics_fn <- .args[2:(N_COLLECTIVE_MODELS+1)]
pij_fn <- .args[(N_COLLECTIVE_MODELS+2):(N_COLLECTIVE_MODELS+N_COLLECTIVE_MODELS+1)]
read_model <- function(fn, stub, colClasses){
model_name <- gsub(stub, "", basename(fn))
df <- fread(fn, colClasses=colClasses)
df$model <- model_name
df
}
metrics <- do.call(rbind,
lapply(metrics_fn, read_model, stub="_2019_01_01_check.csv",
colClasses=c()))
pij <- do.call(rbind,
lapply(pij_fn, read_model, stub="_2019_01_01_pij.csv",
colClasses=c("geoid_o"="character", "geoid_d"="character")))
empirical[, obs := pop_flows / sum(pop_flows)]
pij[empirical, on=c("geoid_o", "geoid_d"), obs := obs]
pij <- pij[order(obs)]
pij[, id := rev(.I)]
pij <- melt(pij, id.vars = c("geoid_o", "geoid_d", "model", "id"))
model_order <- subset(metrics, metric=="RMSE")[order(value)]$model
model_labels <- stringr::str_to_title(gsub("_", " ", model_order))
pij[, model := factor(model, levels=model_order, labels=model_labels)]
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = expression(P['i,j']),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
p
ggsave(.outputs[1],
p,
width=10,
height=6,
units="in")
suppressPackageStartupMessages({
library(data.table)
library(ggplot2)
})
if (interactive()) {
.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/gravity/check/gravity_basic_2019_01_01_check.csv",
"output/gravity/check/gravity_power_2019_01_01_check.csv",
"output/gravity/pij/gravity_basic_2019_01_01_pij.csv",
"output/gravity/pij/gravity_power_2019_01_01_pij.csv",
"output/sensitivity/collective_model_sensitivity/collective_error_comparison_2019_01_01.png",
"output/sensitivity/collective_model_sensitivity/collective_model_metrics_2019_01_01.png"
)
N_COLLECTIVE_MODELS <- 2
} else {
.args <- commandArgs(trailingOnly = T)
N_COLLECTIVE_MODELS <- 8
}
.outputs <- tail(.args, 2)
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
.outputs
suppressPackageStartupMessages({
library(data.table)
library(ggplot2)
})
if (interactive()) {
.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/gravity/check/gravity_basic_2019_01_01_check.csv",
"output/gravity/check/gravity_power_2019_01_01_check.csv",
"output/gravity/pij/gravity_basic_2019_01_01_pij.csv",
"output/gravity/pij/gravity_power_2019_01_01_pij.csv",
"output/sensitivity/collective_model_sensitivity/collective_error_comparison_2019_01_01.png",
"output/sensitivity/collective_model_sensitivity/collective_model_metrics_2019_01_01.png"
)
N_COLLECTIVE_MODELS <- 2
} else {
.args <- commandArgs(trailingOnly = T)
N_COLLECTIVE_MODELS <- 8
}
.outputs <- tail(.args, 2)
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
metrics_fn <- .args[2:(N_COLLECTIVE_MODELS+1)]
pij_fn <- .args[(N_COLLECTIVE_MODELS+2):(N_COLLECTIVE_MODELS+N_COLLECTIVE_MODELS+1)]
read_model <- function(fn, stub, colClasses){
model_name <- gsub(stub, "", basename(fn))
df <- fread(fn, colClasses=colClasses)
df$model <- model_name
df
}
metrics <- do.call(rbind,
lapply(metrics_fn, read_model, stub="_2019_01_01_check.csv",
colClasses=c()))
pij <- do.call(rbind,
lapply(pij_fn, read_model, stub="_2019_01_01_pij.csv",
colClasses=c("geoid_o"="character", "geoid_d"="character")))
empirical[, obs := pop_flows / sum(pop_flows)]
pij[empirical, on=c("geoid_o", "geoid_d"), obs := obs]
pij <- pij[order(obs)]
pij[, id := rev(.I)]
pij <- melt(pij, id.vars = c("geoid_o", "geoid_d", "model", "id"))
model_order <- subset(metrics, metric=="RMSE")[order(value)]$model
model_labels <- stringr::str_to_title(gsub("_", " ", model_order))
pij[, model := factor(model, levels=model_order, labels=model_labels)]
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2) +
labs(y = expression(P['i,j']),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
p
ggsave(.outputs[1],
p,
width=10,
height=6,
units="in")
metrics <- metrics[order(metric, model)]
metrics[, model := factor(model, levels=rev(model_order), labels=rev(model_labels))]
p <- ggplot(metrics) +
geom_path(aes(x = model, y = value, group=metric), size=0.2) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold"))
p
ggsave(.outputs[2],
p,
width=10,
height=6,
units="in")
p <- ggplot(metrics) +
geom_path(aes(x = model, y = value, group=metric), size=0.2) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold")) +
labs(y = "Metric value",
x = NULL)
p
metrics
metrics[, metric := factor(metric, levels=c("RMSE", "MAPE", "DIC", "R2"))]
p <- ggplot(metrics) +
geom_point(aes(x = model, y = value,
color=model)) +
facet_wrap(~metric, scales='free_y') +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(fill="white"),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face="bold")) +
labs(y = "Value",
x = NULL)
p
metrics
t(metrics)
metrics
dcast(metrics, value.var = "value")
?dcast
?dcast
dcast(metrics, model ~ metric )
round(dcast(metrics, model ~ metric), 2)
metrics
metrics[, value := round(value, 2)]
dcast(metrics, model ~ metric)
p <- ggplot(pij) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("obs"="black", "value"="red")) +
facet_wrap(~model, nrow = 4, ncol=2, scales="free_y") +
labs(y = expression(P['i,j']),
x = "Origin-Destination Pair") +
theme_classic() +
theme(legend.position="none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
text = element_text(size=20))
p
suppressPackageStartupMessages({
library(data.table)
library(ggplot2)
library(igraph)
})
if (interactive()) {
.args <- c(
"data/mobility/clean/daily_county2county_2019_01_01_clean.csv",
"output/analytics/base_analytics/gravity_transport/base_analytics_2019_01_01.csv",
"data/geo/2019_us_county_distance_matrix.csv",
""
)
} else {
.args <- commandArgs(trailingOnly = T)
}
empirical <- fread(.args[1],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
depr <- fread(.args[2],
colClasses=c("geoid_o"="character", "geoid_d"="character"))
dist <- fread(.args[3],
colClasses=c("GEOID_origin"="character", "GEOID_dest"="character"))
# filter for states
states <- unique(substr(depr$geoid_o, 1, 2))
empirical <- empirical[
substr(empirical$geoid_o, 1, 2) %in% states &
substr(empirical$geoid_d, 1, 2) %in% states, ]
dist <- dist[
substr(dist$GEOID_origin, 1, 2) %in% states &
substr(dist$GEOID_dest, 1, 2) %in% states, ]
all_counties <- unique(c(
empirical$geoid_o,
empirical$geoid_d,
depr$geoid_o,
depr$geoid_o))
all_counties <- data.table(gtools::permutations(n=length(all_counties), r=2, v=all_counties, repeats.allowed = T))
colnames(all_counties) <- c("geoid_o", "geoid_d")
all_counties <- all_counties[order(geoid_o, geoid_d)]
all_counties[empirical, on=c("geoid_o", "geoid_d"), empirical := pop_flows]
all_counties[depr, on=c("geoid_o", "geoid_d"), depr := count]
all_counties[is.na(all_counties)] <- 0
all_counties[, empirical := empirical / sum(empirical)]
all_counties[, depr := depr / sum(depr)]
all_counties <- all_counties[order(empirical)]
all_counties[, id := rev(.I)]
all_counties_long <- melt(all_counties, id.vars = c('geoid_o', 'geoid_d', 'id'))
p <- ggplot(all_counties_long) +
geom_point(aes(x = id, y = value, color=variable), size=0.2) +
scale_y_continuous(trans="log10", labels = scales::comma) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=c("black", "red")) +
labs(title=basename(.outputs[3]),
y = "P(i,j)",
x = "Origin-Destination Pair") +
theme_classic()
# looks to me like dEPR is just reflecting error in the gravity model.
# Could be much worse than this
p
colnames(empirical) <- c("geoid_o", "geoid_d", "weight")
colnames(depr) <- c("geoid_o", "geoid_d", "weight")
empirical <- subset(empirical, weight > 0)
depr <- subset(depr, weight > 0)
g_empirical <- graph_from_data_frame(empirical, directed=F)
g_depr <- graph_from_data_frame(depr, directed=F)
